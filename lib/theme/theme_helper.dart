import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              5,
            ),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Color(0XFFFFFFFF),
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: appTheme.blueGray80001,
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              5,
            ),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.onPrimary.withOpacity(1);
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.onPrimary.withOpacity(1);
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 3,
        space: 3,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray80001,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray80001,
          fontSize: getFontSize(
            13,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.yellowA200,
          fontSize: getFontSize(
            48,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            36,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            30,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w600,
        ),
        headlineMedium: TextStyle(
          color: appTheme.blueGray800,
          fontSize: getFontSize(
            26,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w500,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            24,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.gray60001,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: appTheme.blueGray80001,
          fontSize: getFontSize(
            8,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray80001,
          fontSize: getFontSize(
            20,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray80001,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.orange500,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Hind',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFB32C43),
    primaryContainer: Color(0XFFFFF6F1),
    secondary: Color(0XFFFFF6F1),
    secondaryContainer: Color(0XFFB32C43),
    tertiary: Color(0XFFFFF6F1),
    tertiaryContainer: Color(0XFFB32C43),

    // Background colors
    background: Color(0XFFFFF6F1),

    // Surface colors
    surface: Color(0XFFFFF6F1),
    surfaceTint: Color(0X19FFFFFF),
    surfaceVariant: Color(0XFFB32C43),

    // Error colors
    error: Color(0X19FFFFFF),
    errorContainer: Color(0XFFB32C43),
    onError: Color(0XFF263238),
    onErrorContainer: Color(0X19FFFFFF),

    // On colors(text colors)
    onBackground: Color(0XFF263238),
    onInverseSurface: Color(0XFF263238),
    onPrimary: Color(0X19FFFFFF),
    onPrimaryContainer: Color(0XFF263238),
    onSecondary: Color(0XFF263238),
    onSecondaryContainer: Color(0X19FFFFFF),
    onTertiary: Color(0XFF263238),
    onTertiaryContainer: Color(0X19FFFFFF),

    // Other colors
    outline: Color(0X19FFFFFF),
    outlineVariant: Color(0XFFFFF6F1),
    scrim: Color(0XFFFFF6F1),
    shadow: Color(0X19FFFFFF),

    // Inverse colors
    inversePrimary: Color(0XFFFFF6F1),
    inverseSurface: Color(0X19FFFFFF),

    // Pending colors
    onSurface: Color(0XFF263238),
    onSurfaceVariant: Color(0X19FFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500 => Color(0XFFFFC30C);
  Color get amber600 => Color(0XFFF5B100);
  Color get amber700 => Color(0XFFF29F00);

  // Black
  Color get black900 => Color(0XFF010101);
  Color get black90001 => Color(0XFF000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray200 => Color(0XFFB2B2C2);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray800 => Color(0XFF424357);
  Color get blueGray80001 => Color(0XFF3D4356);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFEDCFBC);
  Color get deepOrange10001 => Color(0XFFE2C0A8);
  Color get deepOrange200 => Color(0XFFE8BDA2);
  Color get deepOrange50 => Color(0XFFFFEFE6);
  Color get deepOrangeA100 => Color(0XFFEE9C7F);
  Color get deepOrangeA10001 => Color(0XFFF1B476);

  // Gray
  Color get gray100 => Color(0XFFF8F3F0);
  Color get gray10001 => Color(0XFFF8F3EE);
  Color get gray10002 => Color(0XFFF7F3ED);
  Color get gray10003 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFEBEBEB);
  Color get gray20001 => Color(0XFFEFEFEF);
  Color get gray20002 => Color(0XFFEFEEEE);
  Color get gray300 => Color(0XFFDDDDDD);
  Color get gray50 => Color(0XFFFFFAF7);
  Color get gray500 => Color(0XFFA5A5A5);
  Color get gray600 => Color(0XFF737288);
  Color get gray60001 => Color(0XFF727288);
  Color get gray900 => Color(0XFF23272D);
  Color get gray90001 => Color(0XFF251F33);
  Color get gray90002 => Color(0XFF1F1B2D);

  // Green
  Color get green700 => Color(0XFF24B817);
  Color get green70001 => Color(0XFF24B717);

  // Indigoc
  Color get indigo4004c => Color(0X4C6464BC);

  // Orange
  Color get orange300 => Color(0XFFEAB14B);
  Color get orange30001 => Color(0XFFF4BF55);
  Color get orange500 => Color(0XFFFC9B12);
  Color get orangeA200 => Color(0XFFE6B23E);
  Color get orangeA20001 => Color(0XFFDBA63B);
  Color get orangeA20002 => Color(0XFFFFB143);

  // Orangec
  Color get orange5004c => Color(0X4CFC9B11);

  // Pink
  Color get pink400 => Color(0XFFEC5374);
  Color get pink40001 => Color(0XFFD14362);
  Color get pink600 => Color(0XFFCE3254);
  Color get pink900 => Color(0XFF7A0519);
  Color get pink90001 => Color(0XFF891931);
  Color get pink90002 => Color(0XFF8B0A26);

  // Red
  Color get red100 => Color(0XFFFFD6DC);
  Color get red200 => Color(0XFFE0AA85);
  Color get red300 => Color(0XFFDD856B);
  Color get red50 => Color(0XFFFFF1F3);
  Color get red5001 => Color(0XFFFFF0F3);
  Color get redA700 => Color(0XFFE30F0F);
  Color get redA70001 => Color(0XFFFF0000);
  Color get redA70002 => Color(0XFFE30E0E);

  // Yellow
  Color get yellow900 => Color(0XFFCD8428);
  Color get yellowA200 => Color(0XFFFFF50D);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
