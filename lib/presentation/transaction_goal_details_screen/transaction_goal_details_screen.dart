import 'bloc/transaction_goal_details_bloc.dart';import 'models/transaction_goal_details_model.dart';import 'package:flutter/material.dart';import 'package:samruddhi_s_application1/core/app_export.dart';import 'package:samruddhi_s_application1/presentation/with_surrender_page/with_surrender_page.dart';import 'package:samruddhi_s_application1/widgets/app_bar/appbar_image.dart';import 'package:samruddhi_s_application1/widgets/app_bar/appbar_subtitle_2.dart';import 'package:samruddhi_s_application1/widgets/app_bar/appbar_title.dart';import 'package:samruddhi_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:samruddhi_s_application1/widgets/custom_bottom_app_bar.dart';import 'package:samruddhi_s_application1/widgets/custom_elevated_button.dart';
// ignore_for_file: must_be_immutable
class TransactionGoalDetailsScreen extends StatelessWidget {TransactionGoalDetailsScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<TransactionGoalDetailsBloc>(create: (context) => TransactionGoalDetailsBloc(TransactionGoalDetailsState(transactionGoalDetailsModelObj: TransactionGoalDetailsModel()))..add(TransactionGoalDetailsInitialEvent()), child: TransactionGoalDetailsScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return BlocBuilder<TransactionGoalDetailsBloc, TransactionGoalDetailsState>(builder: (context, state) {return SafeArea(child: Scaffold(backgroundColor: theme.colorScheme.onPrimary.withOpacity(1), appBar: CustomAppBar(leadingWidth: getHorizontalSize(35), leading: AppbarImage(imagePath: ImageConstant.imgLeftarrow1, margin: getMargin(left: 15, top: 10, bottom: 10), onTap: () {onTapLeftarrowone(context);}), centerTitle: true, title: AppbarTitle(text: "lbl_add_goals".tr), actions: [Container(margin: getMargin(left: 15, top: 13, right: 15, bottom: 13), padding: getPadding(left: 2, right: 2), decoration: AppDecoration.outlineOrange5003.copyWith(borderRadius: BorderRadiusStyle.roundedBorder2), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(height: getSize(10), width: getSize(10), margin: getMargin(top: 2, bottom: 2), decoration: BoxDecoration(color: appTheme.orange500, borderRadius: BorderRadius.circular(getHorizontalSize(2)))), AppbarSubtitle2(text: "lbl7".tr.toUpperCase(), margin: getMargin(left: 4, right: 5, bottom: 1))]))], styleType: Style.bgFill), body: Container(width: double.maxFinite, padding: getPadding(left: 13, top: 15, right: 13, bottom: 15), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(margin: getMargin(right: 2), decoration: AppDecoration.outlineOrange500.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [CustomElevatedButton(height: getVerticalSize(30), text: "lbl_goal_details".tr, rightIcon: Container(margin: getMargin(left: 30), child: CustomImageView(svgPath: ImageConstant.imgEdit)), leftIcon: Container(margin: getMargin(right: 5), child: CustomImageView(imagePath: ImageConstant.imgAccount15, height: getSize(14), width: getSize(14))), buttonStyle: CustomButtonStyles.fillOrange1, onTap: () {onTapGoaldetails(context);}), Padding(padding: getPadding(left: 15, top: 6), child: Row(children: [Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_goals".tr, style: CustomTextStyles.bodySmallGray60001), Text("lbl_buy_car".tr, style: theme.textTheme.titleMedium)]), Padding(padding: getPadding(left: 95), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_member".tr, style: CustomTextStyles.bodySmallGray60001), Text("lbl_my_self".tr, style: theme.textTheme.titleMedium)]))])), Padding(padding: getPadding(left: 15, top: 5, bottom: 13), child: Row(children: [Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_current_amount".tr, style: CustomTextStyles.bodySmallGray60001), Text("lbl_7_00_000".tr, style: theme.textTheme.titleMedium)]), Padding(padding: getPadding(left: 80), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_time_in_years".tr, style: CustomTextStyles.bodySmallGray60001), Text("lbl_2028".tr, style: theme.textTheme.titleMedium)]))]))])), Padding(padding: getPadding(left: 2, top: 21), child: Text("msg_calculating_result".tr, style: CustomTextStyles.titleMedium18_1)), Container(margin: getMargin(left: 2, top: 4, right: 2), padding: getPadding(left: 15, top: 7, right: 15, bottom: 7), decoration: AppDecoration.gradientPinkToPink.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 4, bottom: 6), child: Text("lbl_total_amount".tr, style: theme.textTheme.titleSmall)), Padding(padding: getPadding(bottom: 1), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_rs".tr, style: CustomTextStyles.titleSmallOnPrimaryMedium), TextSpan(text: "lbl_7l".tr, style: theme.textTheme.displaySmall)]), textAlign: TextAlign.left))])), Container(margin: getMargin(left: 2, top: 10, right: 2), padding: getPadding(left: 15, top: 7, right: 15, bottom: 7), decoration: AppDecoration.gradientOrangeToPink.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 6, bottom: 5), child: Text("msg_monthly_investment".tr, style: theme.textTheme.titleSmall)), Padding(padding: getPadding(bottom: 1), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_rs".tr, style: CustomTextStyles.titleSmallOnPrimaryMedium), TextSpan(text: "lbl_50002".tr, style: theme.textTheme.displaySmall)]), textAlign: TextAlign.left))])), Container(height: getVerticalSize(52), width: getHorizontalSize(330), margin: getMargin(left: 2, top: 15, bottom: 15), child: Stack(alignment: Alignment.topLeft, children: [Align(alignment: Alignment.bottomCenter, child: Container(margin: getMargin(top: 8), padding: getPadding(top: 7, bottom: 7), decoration: AppDecoration.outlineOrange5001.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceAround, children: [Padding(padding: getPadding(top: 3), child: Text("msg_would_you_like_to".tr, style: theme.textTheme.titleMedium)), Container(margin: getMargin(top: 2), padding: getPadding(left: 6, top: 2, right: 6, bottom: 2), decoration: AppDecoration.outlineOrange500.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Text("lbl_no".tr, style: theme.textTheme.titleSmall), Container(height: getSize(18), width: getSize(18), margin: getMargin(left: 6, top: 2, bottom: 2), decoration: BoxDecoration(color: appTheme.orange500, borderRadius: BorderRadius.circular(getHorizontalSize(3))))]))]))), Align(alignment: Alignment.topLeft, child: Container(height: getVerticalSize(3), width: getHorizontalSize(34), margin: getMargin(left: 10, top: 7))), Align(alignment: Alignment.topLeft, child: Padding(padding: getPadding(left: 15), child: Text("lbl_goals".tr, style: theme.textTheme.labelMedium)))]))])), bottomNavigationBar: CustomBottomAppBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));})));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return "/"; case BottomBarEnum.Financialplan: return "/"; case BottomBarEnum.Transaction: return AppRoutes.withSurrenderPage; case BottomBarEnum.Advisory: return "/"; case BottomBarEnum.Monitoring: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.withSurrenderPage: return WithSurrenderPage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the transactionGoalScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the transactionGoalScreen.
onTapLeftarrowone(BuildContext context) { NavigatorService.pushNamed(AppRoutes.transactionGoalScreen, ); } 
/// Navigates to the transactionGoalScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the transactionGoalScreen.
onTapGoaldetails(BuildContext context) { NavigatorService.pushNamed(AppRoutes.transactionGoalScreen, ); } 
 }
