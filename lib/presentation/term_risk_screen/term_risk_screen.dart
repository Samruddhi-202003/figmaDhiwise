import '../term_risk_screen/widgets/coverneededbutt1_item_widget.dart';import 'bloc/term_risk_bloc.dart';import 'models/coverneededbutt1_item_model.dart';import 'models/term_risk_model.dart';import 'package:flutter/material.dart';import 'package:samruddhi_s_application1/core/app_export.dart';import 'package:samruddhi_s_application1/widgets/app_bar/appbar_image.dart';import 'package:samruddhi_s_application1/widgets/app_bar/appbar_subtitle_2.dart';import 'package:samruddhi_s_application1/widgets/app_bar/appbar_title.dart';import 'package:samruddhi_s_application1/widgets/app_bar/custom_app_bar.dart';class TermRiskScreen extends StatelessWidget {const TermRiskScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<TermRiskBloc>(create: (context) => TermRiskBloc(TermRiskState(termRiskModelObj: TermRiskModel()))..add(TermRiskInitialEvent()), child: TermRiskScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: theme.colorScheme.onPrimary.withOpacity(1), appBar: CustomAppBar(leadingWidth: getHorizontalSize(35), leading: AppbarImage(imagePath: ImageConstant.imgLeftarrow1, margin: getMargin(left: 15, top: 10, bottom: 10), onTap: () {onTapLeftarrowone(context);}), centerTitle: true, title: AppbarTitle(text: "lbl_insurances".tr), actions: [Container(margin: getMargin(left: 15, top: 13, right: 15, bottom: 13), padding: getPadding(left: 2, right: 2), decoration: AppDecoration.outlineOrange5003.copyWith(borderRadius: BorderRadiusStyle.roundedBorder2), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(height: getSize(10), width: getSize(10), margin: getMargin(top: 2, bottom: 2), decoration: BoxDecoration(color: appTheme.orange500, borderRadius: BorderRadius.circular(getHorizontalSize(2)))), AppbarSubtitle2(text: "lbl7".tr.toUpperCase(), margin: getMargin(left: 4, right: 5, bottom: 1))]))], styleType: Style.bgFill), body: SizedBox(width: double.maxFinite, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [SizedBox(height: getVerticalSize(443), width: double.maxFinite, child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.topCenter, child: Container(padding: getPadding(left: 85, top: 11, right: 85, bottom: 11), decoration: AppDecoration.fillRedA, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_life_insurance2".tr, style: theme.textTheme.headlineLarge), CustomImageView(imagePath: ImageConstant.imgShield1190x190, height: getSize(190), width: getSize(190), margin: getMargin(top: 6, bottom: 6))]))), CustomImageView(svgPath: ImageConstant.imgVector1RedA700, height: getVerticalSize(44), width: getHorizontalSize(359), alignment: Alignment.bottomCenter), Align(alignment: Alignment.bottomCenter, child: Padding(padding: getPadding(left: 99, right: 99, bottom: 26), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl3".tr, style: theme.textTheme.headlineLarge), CustomImageView(imagePath: ImageConstant.imgRisk21, height: getVerticalSize(60), width: getHorizontalSize(157), margin: getMargin(top: 4)), Text("lbl4".tr, style: theme.textTheme.headlineLarge)])))])), Expanded(child: Padding(padding: getPadding(left: 30, top: 39, right: 30), child: BlocSelector<TermRiskBloc, TermRiskState, TermRiskModel?>(selector: (state) => state.termRiskModelObj, builder: (context, termRiskModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(10));}, itemCount: termRiskModelObj?.coverneededbutt1ItemList.length ?? 0, itemBuilder: (context, index) {Coverneededbutt1ItemModel model = termRiskModelObj?.coverneededbutt1ItemList[index] ?? Coverneededbutt1ItemModel(); return Coverneededbutt1ItemWidget(model);});})))])))); } 
/// Navigates to the dashboardScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the dashboardScreen.
onTapLeftarrowone(BuildContext context) { NavigatorService.pushNamed(AppRoutes.dashboardScreen, ); } 
 }
